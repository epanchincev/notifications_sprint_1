services:
  rabbit:
    image: rabbitmq:3-management-alpine
    volumes:
        - rabbit_volume:/var/lib/rabbitmq/
    expose:
        - "5672"
        - "15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
    env_file:
      - ./.env

  db:
    image: postgres:16.3-alpine3.20
    volumes:
      - db_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--quiet"]
      interval: 1s
      timeout: 5s
      retries: 10
    expose:
      - "5432"

  fake-auth-service:
    build:
      context: ../fake_auth_service/
      dockerfile: Dockerfile
    image: fake-auth-service
    expose:
      - "8090"
    working_dir: /app
    command: >
      sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"

  notification_processor:
    build:
      context: ../notification_processor/
      dockerfile: Dockerfile
    image: notification_processor
    depends_on:
      rabbit:
        condition: service_healthy
    working_dir: /app
    command: >
      sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"

  notifications-admin:
    build:
      context: ../notifications_admin/
      dockerfile: Dockerfile
    image: notifications-admin
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    working_dir: /app
    command: >
      sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"

  notifications-api:
    build:
      context: ../notifications_api/
      dockerfile: Dockerfile
    image: notifications-api
    depends_on:
      rabbit:
        condition: service_healthy
    expose:
      - "8001"
    working_dir: /app
    command: >
      sh -c "chmod +x entrypoint.sh && ./entrypoint.sh"

  notifications-worker:
    build:
      context: ../notifications_worker/
      dockerfile: Dockerfile
    image: notifications-worker
    env_file:
      - ./.env
    depends_on:
      rabbit:
        condition: service_healthy

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_log:/var/log/nginx/
    ports:
      - "80:80"
    depends_on:
      - notifications-admin
      - notifications-api

volumes:
  nginx_log:
  db_volume:
  rabbit_volume: 