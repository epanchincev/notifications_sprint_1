"""init

Revision ID: 4b7a7592ac0d
Revises: 
Create Date: 2024-09-20 16:17:16.788813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4b7a7592ac0d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('CREATE SCHEMA IF NOT EXISTS notifications;')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('template',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('template_type', sa.String(length=64), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    schema='notifications'
    )
    op.create_table('notification',
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('recepients', sa.JSON(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('delay_in_minutes', sa.INTEGER(), nullable=False),
    sa.Column('start_period', sa.DateTime(), nullable=False),
    sa.Column('period_in_days', sa.INTEGER(), nullable=False),
    sa.Column('template_uuid', sa.UUID(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['template_uuid'], ['notifications.template.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    schema='notifications'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification', schema='notifications')
    op.drop_table('template', schema='notifications')
    # ### end Alembic commands ###
    op.execute('DROP SCHEMA IF EXISTS notifications;')
