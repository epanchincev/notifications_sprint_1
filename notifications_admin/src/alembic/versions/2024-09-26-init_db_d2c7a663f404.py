"""init_db

Revision ID: d2c7a663f404
Revises: 
Create Date: 2024-09-26 11:37:37.791563

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from core.config import settings


# revision identifiers, used by Alembic.
revision: str = 'd2c7a663f404'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute(f'CREATE SCHEMA IF NOT EXISTS {settings.db_schema};')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('template',
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('subject', sa.String(length=256), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema=settings.db_schema
    )
    op.create_table('notification',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('recepients', sa.ARRAY(sa.UUID()), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.Column('delay_in_minutes', sa.INTEGER(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('schedule', sa.String(length=64), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['template_id'], ['notifications.template.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=settings.db_schema
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification', schema=settings.db_schema)
    op.drop_table('template', schema=settings.db_schema)
    op.execute(f'DROP SCHEMA IF EXISTS {settings.db_schema};')
    # ### end Alembic commands ###
